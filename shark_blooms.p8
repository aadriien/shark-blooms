pico-8 cartridge // http://www.pico-8.com
version 42
__lua__


-- CONFIGS
SCREEN_SIZE = 128

palt(8, true)


-- GAME STATES
game_states = {
    start = 0,
    game = 1,
    gameover = 2
}
state = game_states.start


-- SIMPLE ENTITIES
Entity = {}
Entity.__index = Entity


-- PICO-8 CALLBACKS
function _init()
    cls()
end

function _update()
    if state == game_states.start then update_start()
    elseif state == game_states.game then update_game()
    elseif state == game_states.gameover then update_gameover() end
end

function _draw()
    cls()
    if state == game_states.start then draw_start()
    elseif state == game_states.game then draw_game()
    elseif state == game_states.gameover then draw_gameover() end
end


-- STATE MANAGEMENT
function change_state(next_state)
    state = next_state
    cls()
end


function Entity.create(x,y,w,h)
    local e = setmetatable({}, Entity)
    e.x, e.y, e.w, e.h = x, y, w, h
    return e
end


function Entity:collide(other)
    return 
        other.x < self.x + self.w and 
        self.x < other.x + other.w and 
        other.y < self.y + self.h and 
        self.y < other.y + other.h
end


-- WHALE SHARK PLAYER
player = Entity.create(64,64,8,8)


-- INPUT HANDLING
function handle_input()
    if btn(0) then player.x = max(0, player.x-1) end
    if btn(1) then player.x = min(128, player.x+1) end
    if btn(2) then player.y = max(0, player.y-1) end
    if btn(3) then player.y = min(128, player.y+1) end
end


-- TEXT DRAWING 
function text_x_pos(text)
    return SCREEN_SIZE/2 - flr(#text*4/2)
end


function write(text,x,y,color)
    for i=0,2 do 
        for j=0,2 do 
            print(text,x+i,y+j,0) 
        end 
    end
    print(text,x+1,y+1,color)
end


-- BIG PRINT ANIMATED
function big_print_anim(x, y, text, color, big, animate, rect_bg)
    local w, h = 4, 6
    local color = color or 7
    local tag = ""

    if (big) w = 7 h = 11 tag = "\^t\^w"

    animate = animate ~= false
    rect_bg = rect_bg ~= false

    -- text width & rectangle edges
    local text_w = #text * w
    local ledge = x - text_w / 2
    local redge = x + text_w / 2

    -- optional rectangle background
    if rect_bg then
        rect(ledge-1, y-6, redge+1, y+h, 10)
        rectfill(ledge, y-5, redge, y+h-1, 0)
        line(ledge-1, y+h+1, redge+1, y+h+1, 9)
    end

    -- draw each letter with smooth 3x3 border
    for i=0,#text do
        local ch = sub(text, i, i)
        local xp = ledge + (i * w) - 3
        if (big) then xp -= 3 end
        local off = animate and sin((i/16) + time()) * 1.95 or 0

        -- border
        for dx=-1,1 do
            for dy=-1,1 do
                print(tag..ch, xp+dx, y+off+dy-1, 1)
            end
        end

        -- main letter
        print(tag..ch, xp, y+off-2, color)
    end
end


-- START
function update_start()
    if btnp(4) or btnp(5) then
        change_state(game_states.game)
    end
end

function draw_start()
    rectfill(0, 0, SCREEN_SIZE, SCREEN_SIZE, 12)

    big_print_anim(64, 20, "WHALY!", 7, false, true, true)
    big_print_anim(64, 40, "whale shark", 10, true, false, false)

    write("PRESS ❎ TO START", text_x_pos("PRESS ❎ TO START"), 80, 7)
end


-- GAME
function update_game()
    handle_input()
    -- game logic here
end


function draw_game()
    rectfill(0,0,SCREEN_SIZE,SCREEN_SIZE,12)
    rect(player.x, player.y, player.x+player.w, player.y+player.h, 8)
end


-- GAME OVER
function update_gameover()
    if btnp(4) or btnp(5) then
        change_state(game_states.start)
    end
end


function draw_gameover()
    rectfill(0,0,SCREEN_SIZE,SCREEN_SIZE,3)

    big_print_anim(64, 40, "game over", 10, true, false, false)

    write("PRESS ❎", text_x_pos("PRESS ❎"), 80, 7)
end



__gfx__
88888888008888888888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888880108888888888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888880710888888888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888880c10888888888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888800c70888888888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8888000cc00888888888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
80001cc7c08888888888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
801cc7cccc0088880088888888808888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
880000cc7cc108800108888888010888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8888880cccc70001c7088888880c0888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888801c7cc01ccc008888888070088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888801cccccc7cc0000088800c1088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
888888067cc7cccc00c7c00880cc7088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
888888056ccccccccccccc7000ccc108000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8888888067ccc7ccc7cccccc0cc7c108000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888880661ccccccccc7cccc7cc1008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
888888805661ccccccccccccccc00088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
888888880661c7ccc7ccccc7cccc7008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
888888880566ccccccccccccccc7c108000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8888888880660cccccccc7ccc7cccc08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8888008880000cccccccccc7c7ccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
888017000cc7ccccc7cc0cccccccc070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8888017cccccc7ccccc00cc7ccc700c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8888001cc7ccccc00cccc1000000ccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
888888007cccc7006c7000ddddd00070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
888888800011000566c0ddddddddd010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8888888880000880056c0ddddddddd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
888888888888888800660000dddd0008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888888888888000566000000508000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888888888888880005666566008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888888888888888800000000088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505050606030303040404020101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0005000600000300040004020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0005000606000300040404020101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0005000600000300040400020000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0005000606000300040004020101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0034343434343434343434343434343400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
